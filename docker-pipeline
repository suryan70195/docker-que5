pipeline {
    agent any
    environment {
        AWS_ACCOUNT_ID = "515966525347"
        AWS_DEFAULT_REGION = "ap-south-1"
        IMAGE_REPO_NAME = "docker-pipeline"
        IMAGE_TAG = "v2"
        REPOSITORY_URI = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/assignment"
        DOCKER_IMAGE = "shrikant712/docker:latest"

    }

    stages {
        stage('Checkout Source Code') {
            steps {
                git branch: 'main', changelog: false, poll: false, url: 'https://github.com/Madhav0987/docker-dec-22.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                sh """
                    docker build -t ${IMAGE_REPO_NAME}:${IMAGE_TAG} .
                """
            }
        }

        stage('Push to DockerHub') {
            steps {
                script {
                        withCredentials([string(credentialsId: 'Dockerhub-password', variable: 'Dockerhub')]) {
                        sh 'docker login -u kubersurya -p ${Dockerhub}'
}
                        sh 'docker tag ${IMAGE_REPO_NAME}:${IMAGE_TAG} ${DOCKER_IMAGE}'
                        sh 'docker push ${DOCKER_IMAGE}'
                    
                }
            }
        }

        stage('Push to AWS ECR') {
            steps {
                script {
                    withEnv(["AWS_ACCESS_KEY_ID=${env.AWS_ACCESS_KEY_ID}", "AWS_SECRET_ACCESS_KEY=${env.AWS_SECRET_ACCESS_KEY}", "AWS_DEFAULT_REGION=${env.AWS_DEFAULT_REGION}"])
{
                    sh """
                        aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | \
                        docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com
                        docker tag ${IMAGE_REPO_NAME}:${IMAGE_TAG} ${REPOSITORY_URI}:${IMAGE_TAG}
                        docker push ${REPOSITORY_URI}:${IMAGE_TAG}
                    """
                }
}
            }
        }
stage('Docker Run'){
				steps{
					script{
							sh 'docker run -it -d $IMAGE_REPO_NAME:$IMAGE_TAG'
						}
					}
				}

    }
}
